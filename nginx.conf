user nginx;
worker_processes auto;
pcre_jit on;
daemon off;
error_log /var/log/nginx/error.log warn;
events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Disable server token
  server_tokens off;
  sendfile on;
  tcp_nodelay on;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:2m;

  proxy_cache_path /var/cache/nginx use_temp_path=off levels=1:2 keys_zone=cache_zone:20m max_size=100m inactive=6m;
  log_format log_cache '$remote_addr - $upstream_cache_status [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
  access_log   /var/log/nginx/access.log log_cache;

  server {
    resolver 8.8.8.8;
    listen 80;
    server_name _;
    client_max_body_size 1G;

    location / {
        return 200 '';
        add_header Content-Type text/plain;
    }
    location ~ /api(?<req_proxy>\/.*) {
      set $downstream_url "api.github.com";
      expires max;
      proxy_ignore_headers Cache-Control;
      proxy_cache_revalidate on;
      proxy_cache_lock on;
      proxy_cache_lock_timeout 2s;
      proxy_cache_valid 1s;
      proxy_cache cache_zone;
      proxy_cache_use_stale error timeout http_500 http_502 http_503;
      add_header X-CACHED $upstream_cache_status;
      proxy_cache_key $cache_key:$req_proxy:$is_args:$args;
      proxy_set_header HOST $downstream_url;
      proxy_pass https://$downstream_url$req_proxy$is_args$args;
      set $cache_key $http_authorization;

      if ($http_x_cache_key) {
        set $cache_key $http_x_cache_key;
      }
    }
  }
}
